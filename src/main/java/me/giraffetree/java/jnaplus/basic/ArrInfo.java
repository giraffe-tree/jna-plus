package me.giraffetree.java.jnaplus.basic;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.ShortByReference;

import java.util.Arrays;
import java.util.List;

/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ArrInfo extends Structure {
    public ShortByReference vals;
    public int len;

    public ArrInfo() {
        super();
    }

    @Override
    protected List<String> getFieldOrder() {
        return Arrays.asList("vals", "len");
    }

    public ArrInfo(ShortByReference vals, int len) {
        super();
        this.vals = vals;
        this.len = len;
    }

    public ArrInfo(Pointer peer) {
        super(peer);
    }

    public static class ByReference extends ArrInfo implements Structure.ByReference {

    }

    ;

    public static class ByValue extends ArrInfo implements Structure.ByValue {

    }

    ;
}
