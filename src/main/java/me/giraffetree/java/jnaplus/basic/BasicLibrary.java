package me.giraffetree.java.jnaplus.basic;

import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.ptr.ShortByReference;

import java.nio.ShortBuffer;

/**
 * JNA Wrapper for library <b>Basic</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface BasicLibrary extends Library {
    public static final String JNA_LIBRARY_NAME = "Basic";
    public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(BasicLibrary.JNA_LIBRARY_NAME);
    public static final BasicLibrary INSTANCE = (BasicLibrary) Native.loadLibrary(BasicLibrary.JNA_LIBRARY_NAME, BasicLibrary.class);

    void printUser(User.ByValue user);

    void printUserRef(User user);

    int max(int num1, int num2);

    @Deprecated
    void testArray(ShortByReference vals, int len);

    void testArray(ShortBuffer vals, int len);

    void testStruct(ArrInfo.ByValue arrInfo);

    void getBool(byte x);
}
